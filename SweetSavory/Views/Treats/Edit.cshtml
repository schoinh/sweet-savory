@model SweetSavory.Models.Treat

@{
    Layout = "_Layout";
}

<h1>Edit Treat: @Html.DisplayFor(model => model.Name)</h1>
<hr>
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.TreatId)

    <div class="form-group">
        <label for="Name">Name</label>
        <input name="Name" type="text" class="form-control" value="@Model.Name" required>
    </div>
    <div class="form-group">
        <label for="Price">Price ($)</label>
        <input name="Price" type="number" class="form-control" value="@Model.Price" required>
    </div>

    <input type="submit" class="btn btn-primary" value="Save" />
}
<hr>
<h4>Current Flavors for @Model.Name:</h4>
@if (Model.Flavors.Any())
{
    <ul>
        @foreach (var join in Model.Flavors)
        {
            <li>
                @using (Html.BeginForm("DeleteFlavor", "Treats", new { treatId = Model.TreatId }))
                {
                    @join.Flavor.Name
                    @Html.Hidden("joinId", @join.FlavorTreatId)
                    <input type="submit" value="Remove"/>
                }
            </li>
        }
    </ul>
}
else
{
    <p>No Flavors</p>
}
<h4>Add Flavors for @Model.Name:</h4>
@using (Html.BeginForm("AddFlavor", "Treats"))
{
    @Html.HiddenFor(model => model.TreatId)
    @Html.HiddenFor(model => model.Name)
    @Html.HiddenFor(model => model.Price)
    
    @Html.DropDownList("FlavorId")

    <input type="submit" class="btn btn-primary" value="Add" />
}
<hr>
<p>@Html.ActionLink("Delete Treat", "Delete", new { id = Model.TreatId })</p>
@Html.ActionLink("‚Üê Back", "Details", new { id = Model.TreatId })